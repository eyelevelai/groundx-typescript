/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Documents } from "./api/resources/documents/client/Client";
import { Search } from "./api/resources/search/client/Client";
import { Buckets } from "./api/resources/buckets/client/Client";
import { Groups } from "./api/resources/groups/client/Client";
import { Customer } from "./api/resources/customer/client/Client";
import { Health } from "./api/resources/health/client/Client";

export declare namespace EyeLevelClient {
    interface Options {
        environment?: core.Supplier<environments.EyeLevelEnvironment | string>;
        apiKey: core.Supplier<string>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class EyeLevelClient {
    constructor(protected readonly _options: EyeLevelClient.Options) {}

    protected _documents: Documents | undefined;

    public get documents(): Documents {
        return (this._documents ??= new Documents(this._options));
    }

    protected _search: Search | undefined;

    public get search(): Search {
        return (this._search ??= new Search(this._options));
    }

    protected _buckets: Buckets | undefined;

    public get buckets(): Buckets {
        return (this._buckets ??= new Buckets(this._options));
    }

    protected _groups: Groups | undefined;

    public get groups(): Groups {
        return (this._groups ??= new Groups(this._options));
    }

    protected _customer: Customer | undefined;

    public get customer(): Customer {
        return (this._customer ??= new Customer(this._options));
    }

    protected _health: Health | undefined;

    public get health(): Health {
        return (this._health ??= new Health(this._options));
    }
}
